@model ChocolateTycoon.Models.Factory

<br />

<tr>
    <td colspan="2" style="text-align: center">Raw Materials (Kg)</td>
    <td colspan="2" style="text-align: center">Production per Day (units)</td>
    <td style="text-align: center">Managers</td>
    <td style="text-align: center">Engineers</td>
</tr>

<tr>
    @if (Model.StorageUnit == null)
    {
        using (Html.BeginForm("Create", "StorageUnit"))
        {
            <td>
                @Html.HiddenFor(m => m.ID)
                <button id="createSU" class="btn btn-link create" type="submit" style="padding: 0; color: #e74c3c;">
                    Create a Storage Unit first!
                </button>
            </td>
        }
    }
    else
    {
        <td>
            @Html.DisplayFor(model => model.StorageUnit.RawMaterialAmount)
        </td>
        using (Html.BeginForm("Replenish", "StorageUnit"))
        {
            <td>
                @Html.HiddenFor(m => m.ID)
                <button id="replenish" class="btn btn-link btn-success" type="submit" style="padding: 0; color: #e74c3c;">
                    replenish
                </button>
                <p class="text-danger">@Model.StorageUnit._message</p>

            </td>
        }
    }

    @if (Model.ProductionUnit == null)
    {
        using (Html.BeginForm("Create", "ProductionUnit"))
        {
            <td colspan="2">
                @Html.HiddenFor(m => m.ID)
                <button id="createPU" class="btn btn-link btn-success" type="submit" style="padding: 0; color: #e74c3c;">
                    Create a Production Unit first!
                </button>
            </td>
        }
    }
    else
    {
        <td>
            @Html.DisplayFor(model => model.ProductionUnit.MaxProductionPerDay)
        </td>
        <td>
            @Html.ActionLink("produce", "Produce", new { id = Model.ID }, new { @class = "btn btn-link text-success", @style = "padding: 0" })
            <p class="text-danger">@ViewBag.ProductionError</p>
            <p class="text-warning">@ViewBag.ProductionSuccess</p>
        </td>
    }

    @{
        Html.RenderAction("FactoryEmployees", new { id = Model.ID });
    }
</tr>

<script type="text/javascript">

    // Create Storage Unit Button
    var suButton = document.getElementById("createSU");

    // Create Production Unit Button
    var puButton = document.getElementById("createPU");

    // Bootbox confirmation for new Storage Unit
    if (suButton != null) {
        suButton.addEventListener("click", function (e) {
            e.preventDefault();

            bootbox.confirm({
                size: "small",
                closeButton: false,
                message: "Create Storage Unit?" + "<p style='color: orange; font-style: italic;'>" + "This will cost 0.00 coins" + "</p>",
                buttons: {
                    confirm: {
                        label: 'Let`s do this!',
                        className: 'btn-success '
                    },
                    cancel: {
                        label: 'Too expensive!',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result) {
                        suButton.form.submit();
                    };
                }
            });
        });
    }

    // Bootbox confirmation for new Production Unit
    if (puButton != null) {
        puButton.addEventListener("click", function (e) {
            e.preventDefault();

            bootbox.confirm({
                size: "small",
                closeButton: false,
                message: "Create Production Unit?" + "<p style='color: orange; font-style: italic;'>" + "This will cost 0.00 coins" + "</p>",
                buttons: {
                    confirm: {
                        label: 'Let`s do this!',
                        className: 'btn-success '
                    },
                    cancel: {
                        label: 'Too expensive!',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result) {
                        puButton.form.submit();
                    };
                }
            });
        });
    }
</script>