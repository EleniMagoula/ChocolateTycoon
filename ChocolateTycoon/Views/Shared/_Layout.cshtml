<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Chocolate Tycoon</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>

                @{Html.RenderAction("Vault", "Safe");}

                @*@{Html.RenderPartial("EndTurn");}*@

                <span class="navbar-brand" style="padding: 8px 30px; color: gold">
                    @Html.ActionLink("Call it a Day", "EndTurn", "Turn", null, new { @id = "endTurnBtn", @class = "btn btn-danger" })
                    @*@Ajax.ActionLink("Call it a Day", "EndTurn", "Turn", null,
                        new AjaxOptions {HttpMethod = "GET",  AllowCache = false, OnSuccess = "turnAlert()"},
                        new { @id = "endTurnBtn", @class = "btn btn-danger" })*@
                </span>

                @Html.ActionLink("Chocolate Tycoon", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })


            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Stores", "Index", "Store")</li>
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle"
                           data-toggle="dropdown" role="button"
                           aria-haspopup="true"
                           aria-expanded="false">
                            Factory
                            <span class="caret"></span>
                        </a>
                        <ul class="dropdown-menu">
                            <li>@Html.ActionLink("Factories", "Index", "Factory")</li>
                            <li>@Html.ActionLink("Suppliers", "Index", "Supplier")</li>
                        </ul>
                    </li>
                    <li>@Html.ActionLink("Employees", "Index", "Employee")</li>
                    <li>@Html.ActionLink("Main Storage", "Index", "MainStorage")</li>
                </ul>

                @Html.Partial("_LoginPartial")

            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - PPGs</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/lib")
    @RenderSection("scripts", required: false)
</body>
</html>

<script>



    $(window).ready(function () {
        let vaultVal = $("#count");

        //counter();

        //uncomment the above to use
        function counter() {
            vaultVal.prop('Counter', 0).animate({
                Counter: vaultVal.text()
            }, {
                duration: 1000,
                easing: 'swing',
                step: function (now) {
                    //vaultVal.text(Math.ceil(now));
                    vaultVal.text(now.toFixed(2));
                }
            });
        };

        $('#endTurnBtn').on('click', function (e) {
            e.preventDefault();

            let self = this;

            bootbox.confirm({
                message: "Are you sure?",
                callback: function (result) {
                    if (result) {
                        $.get(
                            self.href,
                            function (result) {
                                
                            })
                            .then(function () {
                                //debugger;
                                let turnMessage = '@ChocolateTycoon.Models.Turn.TurnMessage';
                                turnAlert(turnMessage);
                            })

                    }
                }
            });
        });

        function turnAlert(turnMessage) {
            bootbox.alert({
                size: "small",
                message: turnMessage,
                callback: function () {
                    location.reload();
                }
            });
        };
    });
</script>
