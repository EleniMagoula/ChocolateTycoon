<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Chocolate Tycoon</title>
    @Styles.Render("~/Content/css")
    @Styles.Render("~/Content/fontawesome-all.css")
    @Scripts.Render("~/bundles/modernizr")

</head>
<body>
    <img class="bg-image" />

    <audio autoplay loop id="audioPlayer">
        <source src="~/Content/resources/audio/chocolate_background_music_short.mp3" type="audio/mpeg">
    </audio>

    <nav class="navbar navbar-inverse navbar-fixed-top">
        <div class="container-fluid">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#main-navbar-collapse">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Chocolate Tycoon", "Index", "Home", new { area = "" }, new { @class = "navbar-brand game-name" })
            </div>

            <div class="collapse navbar-collapse" id="main-navbar-collapse">
                <ul class="nav navbar-nav">
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Menu<span class="caret"></span></a>
                        <ul class="dropdown-menu" role="menu">
                            <li>@Html.ActionLink("Stores", "Index", "Store")</li>
                            <li>@Html.ActionLink("Factories", "Index", "Factory")</li>
                            <li>@Html.ActionLink("Suppliers", "Index", "Supplier")</li>
                            <li>@Html.ActionLink("Employees", "Index", "Employee")</li>
                            <li>@Html.ActionLink("Main Storage", "Index", "MainStorage")</li>


                        </ul>
                    </li>

                    <li>
                        @{Html.RenderAction("Vault", "Safe");}
                    </li>
                </ul>

                <div class="nav navbar-collapse">

                    @Html.ActionLink("END DAY!", "EndTurn", "Turn", null, new { @id = "endTurnBtn", @class = "btn btn-danger text-center" })

                    <span class="navbar-right" id="helpButton">
                        <i class="fa fa-question"></i>
                    </span>

                    @Html.Partial("_LoginPartial")
                </div>
            </div>
        </div>
    </nav>


    <div class="container body-content">
        @RenderBody()
        <hr />

        <!-- Make it stick to the bot. -->
        <footer class="footer">
            <p>&copy; @DateTime.Now.Year - PPGs</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/lib")
    @RenderSection("scripts", required: false)
</body>
</html>

<script>
    $(window).ready(function () {

        function musicController() {
        let mp3 = document.getElementById("audioPlayer");
        if (mp3.muted === true) {
            mp3.muted = false;
        }
        else {
            mp3.muted = true;
        };
        };

        document.getElementById("musicLabel").addEventListener("click", musicController);


        let vaultVal = $("#count");

        //counter();

        //uncomment the above to use
        function counter() {
            vaultVal.prop('Counter', 0).animate({
                Counter: vaultVal.text()
            }, {
                duration: 1000,
                easing: 'swing',
                step: function (now) {
                    //vaultVal.text(Math.ceil(now));
                    vaultVal.text(now.toFixed(2));
                }
            });
        };

        $('#endTurnBtn').on('click', function (e) {
            e.preventDefault();

            let self = this;

            bootbox.confirm({
                message: "Are you sure?",
                callback: function (result) {
                    if (result) {
                        $.get(
                            self.href,
                            function (result) {
                                let turnMessage = result;
                                turnAlert(turnMessage);
                            })
                    }
                }
            });
        });

        function turnAlert(turnMessage) {
            bootbox.alert({
                size: "small",
                message: turnMessage,
                callback: function () {
                    location.reload();
                }
            });
        };

                $("#resetGame").on("click", function(e) {
                 e.preventDefault();
                bootbox.confirm({
                    title: "<strong>You are about to reset your game!</strong>",
                    message: "<strong>Your current progress will be DELETED and can't be undone. <br /> Are you sure you want to do this?</strong>",
                    buttons: {
                        confirm: {
                            label: '<i class="fa fa-check"></i> Confirm',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: '<i class="fa fa-times"></i> Cancel',
                            className: 'btn-danger animated swing infinite'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            window.location.href = "@Url.Action("ResetGame","Game")";
                        };
                    }
                });
            });
    });
</script>
