@model IEnumerable<ChocolateTycoon.Models.Supplier>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<div class="container-fluid">
    @foreach (var supplier in Model)
    {
        <div class="container-fluid col-md-4">
            <table id="table-@supplier.Id" class="table table-bordered">
                <thead style="background-color: darkslategray;">
                    <tr>
                        <th class="text-center" colspan="2">Offer #@supplier.Id</th>
                        <th style="display: none"></th>
                    </tr>
                </thead>
                <tbody style="text-wrap: none">
                </tbody>
                <tfoot>
                    <tr class="text-center">
                        <td colspan="2">
                            <a href="#" class="btn btn-sm btn-primary js-break-contract">Break Contract</a>
                            <a href="#" class="btn btn-sm btn-primary js-make-contract">Make Contract</a>
                        </td>

                    </tr>
                </tfoot>
            </table>
        </div>
    }
</div>

@section scripts
{
    <script>
        $(document).ready(function () {
            let tables = $(".table");

            function GetAllFactoryNames() {
                let allNames = [];

                let defaultValue = { text: "Select", value: 0 };
                allNames.push(defaultValue);

                $.getJSON("/api/factories", function (result) {
                    $.each(result, function (key, value) {
                        let single = { text: value.name, value: value.id };
                        allNames.push(single);
                    })
                });

                return allNames;
            }

            let allFactoryNames = GetAllFactoryNames();


            for (let i = 0; i < tables.length; i++) {
                let table = "#" + tables[i].getAttribute("id");

                fetch("/api/suppliers/" + (i + 1)).then(function (response) {

                    return response.text();

                }).then(function (data) {

                    const supplier = JSON.parse(data);

                    // get the names of the factories supplied by each supplier
                    function GetFactoryNames() {
                        let names = [];

                        (supplier.factories).forEach(function (key, value) {
                            names.push(" " + key.name);
                        });

                        names.sort((a, b) => a.localeCompare(b));

                        return names.length > 0 ? names : "None";
                    };

                    // get the names and ids of supplied factories to fill select prompt
                    function GetSuppliedFactories() {
                        let factories = [];

                        let defaultValue = { text: "Select", value: 0 };
                        factories.push(defaultValue);                          // define default selection

                        (supplier.factories).forEach(function (key, value) {

                            let factory = { text: key.name, value: key.id };
                            factories.push(factory);
                        });

                        return factories.length < 2 ? [{ text: "Nothing to show", value: 0 }] : factories;
                    };


                    $(table).DataTable({
                        bPaginate: false,
                        bInfo: false,
                        searching: false,
                        ordering: false,
                        columns: [
                            {},
                            {}
                        ]
                    })
                        .row.add([
                            "Supplier",
                            supplier.name
                        ])
                        .row.add([
                            "Offer Amount (Kg)",
                            supplier.offerAmount
                        ])
                        .row.add([
                            "Price per Kg",
                            supplier.pricePerKilo
                        ])
                        .row.add([
                            "Currently Serves",
                            GetFactoryNames()
                        ])
                        .draw();


                    // executes the break contract command
                    $(table).on('click', '.js-break-contract', function () {

                        bootbox.prompt({
                            title: "Select a Contract to Break",
                            inputType: 'select',
                            inputOptions: GetSuppliedFactories(),
                            value: 0,
                            callback: function (factoryId) {

                                if (factoryId != 0 && factoryId != null) {

                                    $.ajax({
                                        url: "/api/factories/" + factoryId,
                                        method: "PUT",
                                        success: function () {
                                            location.reload();
                                            console.log("success!");
                                        }
                                    });
                                }
                            }
                        });
                    });


                    $(table).on('click', '.js-make-contract', function () {

                        bootbox.prompt({
                            title: "Select a Factory",
                            inputType: 'select',
                            inputOptions: allFactoryNames,
                            value: 0,
                            callback: function (factoryId) {

                                if (factoryId != 0 && factoryId != null) {

                                    bootbox.confirm({
                                        message: "Are you sure?",
                                        callback: function (result) {
                                            if (result) {
                                                $.ajax({
                                                    url: "/api/factories/",
                                                    method: "POST",
                                                    data: { "Id": factoryId, "supplierId": supplier.id },
                                                    success: function (response) {
                                                        bootbox.alert({
                                                            message: response,
                                                            callback: function () {
                                                                location.reload();
                                                            }
                                                        });
                                                    }
                                                });
                                            }
                                        }
                                    });
                                };
                            }
                        });
                    });










                });
            };

        });
    </script>
}